# -*- coding: utf-8 -*-
"""AI_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tIyPnaTVC9g_bHXA_1XTUzqneXdwW8cj

Import the dataset.

[Click here for the dataset](https://gist.github.com/KhanradCoder/35a6beea49e5b9ba62797e595a9626c0)
"""

import pandas as pd
dataset = pd.read_csv('cancer.csv') # Here I have imported pandas to read our csv dataset file

x = dataset.drop(columns=["diagnosis(1=m, 0=b)"]) # Here we have removed diagnosis column

y = dataset["diagnosis(1=m, 0=b)"] # and assign that diagnosis colum to y

"""Split the data into a training set and a testing set."""

from sklearn.model_selection import train_test_split 

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2) # Here we have split the dataset into training and test with test size 20%

"""Build and train the model."""

import tensorflow as tf

model = tf.keras.models.Sequential() # To make our AI model we have imported tensorflow. In that we are using keras to build the model

model.add(tf.keras.layers.Dense(256, input_shape=x_train.shape, activation='sigmoid'))
model.add(tf.keras.layers.Dense(256, activation='sigmoid'))
model.add(tf.keras.layers.Dense(1, activation='sigmoid'))

# As we have seen a Neural Network, I have made 3 layers - Input layer, Hidden Layer and Output layer with Sigmoid Function

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy']) # Here we have compiled our model.

model.fit(x_train, y_train, epochs=1000) #Here we are iterating our model 1000 iterations to fit the best model

"""Evaluate the model."""

model.evaluate(x_test, y_test) # Lastly evaluating our model to find the accuracy. Here Accuracy is 97.37%. This means our AI model gives us this much of accuracy.

